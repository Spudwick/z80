Testing...
C Sources = /media/sf_GitHub-z80/code/lib/src/test1/test11.c /media/sf_GitHub-z80/code/lib/src/test1/test12.c
S Sources = /media/sf_GitHub-z80/code/lib/src/test1/test14.s /media/sf_GitHub-z80/code/lib/src/test1/test13.s
All Sources = /media/sf_GitHub-z80/code/lib/src/test1/test11.c /media/sf_GitHub-z80/code/lib/src/test1/test12.c /media/sf_GitHub-z80/code/lib/src/test1/test14.s /media/sf_GitHub-z80/code/lib/src/test1/test13.s
Module = test1
Module = test2
Segment = TESTSEG1
Segment = BOOT
Segment = HELLO1
Segment = HELLO2
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# Licence GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Oct 28 16:46:39 2019

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'build/buildsys.mk', line 9)
DB_DIR_test1 := /media/sf_GitHub-z80/code/lib/src/test1
# automatic
?F = $(notdir $?)
# makefile (from 'build/buildsys.mk', line 9)
DB_TGT_test3 := /media/sf_GitHub-z80/code/prog/test3/out/test3.bin
# environment
DESKTOP_SESSION = cinnamon
# makefile (from 'build/dirs.mk', line 26)
DIR_LIB_BIN := /media/sf_GitHub-z80/code/lib
# default
.SHELLFLAGS := -c
# makefile (from '/media/sf_GitHub-z80/code/lib/src/test2/test2.mk', line 2)
DB_SEG_/media/sf_GitHub-z80/code/lib/src/test2/ := HELLOTHERE
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'build/dirs.mk', line 33)
DIRTREE_BIN := out
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /home/tom/.Xauthority
# environment
GDMSESSION = cinnamon
# default
MAKE_VERSION := 4.1
# makefile
CURDIR := /media/sf_GitHub-z80/code
# makefile
SHELL = /bin/sh
# environment
GDM_LANG = en_GB
# environment
VTE_VERSION = 5202
# makefile (from 'makefile', line 4)
ROOT_DIR = $(call GET_ROOT)
# environment
_ = /usr/bin/make
# makefile (from 'build/dirs.mk', line 7)
_R_DIR_ := /media/sf_GitHub-z80/code
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-cinnamon:/etc/xdg
# makefile (from 'build/tools.mk', line 13)
SDCC_ASM_FLGS := -plosgffw
# makefile (from 'build/tools.mk', line 12)
SDCC_ASM := sdasz80
# environment
GTK_OVERLAY_SCROLLING = 1
# makefile (from '/media/sf_GitHub-z80/code/lib/src/test2/test2.mk', line 1)
MAKEFILE_LIST :=  makefile build/buildsys.mk build/version.mk build/dirs.mk build/tools.mk build/rules.mk build/database.mk /media/sf_GitHub-z80/code/lib/src/test1/test1.mk /media/sf_GitHub-z80/code/lib/src/test2/test2.mk
# makefile (from '/media/sf_GitHub-z80/code/lib/src/test1/test1.mk', line 6)
DB_SEG_/media/sf_GitHub-z80/code/lib/src/test1/test12.c := HELLO1
# automatic
@F = $(notdir $@)
# makefile (from 'build/buildsys.mk', line 9)
DB_SRCDIRS_test2 = /media/sf_GitHub-z80/code/lib/src/test2
# makefile (from 'build/buildsys.mk', line 9)
DB_LIBS = test1 test2
# 'override' directive
GNUMAKEFLAGS := 
# environment
MANDATORY_PATH = /usr/share/gconf/cinnamon.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/cinnamon:/usr/share/gnome:/home/tom/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
# makefile (from 'build/database.mk', line 90)
DB_SET_SEG = DB_SEG_$1 := $2
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'build/version.mk', line 3)
VER_MAJ := 0
# makefile (from 'build/buildsys.mk', line 9)
DB_PROGS = test4 test3
# makefile (from '/media/sf_GitHub-z80/code/lib/src/test1/test1.mk', line 2)
DB_SEG_test1 := TESTSEG1
# makefile (from 'build/database.mk', line 45)
DB_GET_SRCDIRS = $(DB_SRCDIRS_$1)
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'build/database.mk', line 123)
define DB_LOAD_PROGRAM
$(eval $(call DB_SET_DIR,$1,$2))
$(eval $(call DB_ADD_PROG,$1))
$(foreach mkfile,$(wildcard $2/*.mk), $(eval include $(mkfile)) )
endef
# makefile (from 'build/buildsys.mk', line 9)
DB_DIR_test2 := /media/sf_GitHub-z80/code/lib/src/test2
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session0
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
# makefile (from 'build/buildsys.mk', line 9)
DB_SSRC_test2 = /media/sf_GitHub-z80/code/lib/src/test2/test24.s /media/sf_GitHub-z80/code/lib/src/test2/test23.s
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# makefile (from 'build/database.mk', line 66)
DB_GET_CSRCS = $(DB_CSRC_$1)
# environment
SESSION_MANAGER = local/Mint-Box:@/tmp/.ICE-unix/1035,unix/Mint-Box:/tmp/.ICE-unix/1035
# environment
CINNAMON_SOFTWARE_RENDERING = 1
# makefile (from 'build/database.mk', line 146)
define DB_INITIALISE
$(eval $(call DB_LOAD_LIBS))
$(eval $(call DB_LOAD_PROGS))
endef
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'build/database.mk', line 34)
DB_GET_MODS = $(DB_LIBS) $(DB_PROGS)
# makefile (from 'build/dirs.mk', line 23)
DIR_LIB := /media/sf_GitHub-z80/code/lib
# makefile (from 'build/database.mk', line 11)
DB_GET_DIR = $(DB_DIR_$1)
# makefile (from 'build/database.mk', line 50)
define DB_ADD_SRC
$(if $(filter .c,$(suffix $2)), $(eval $(call DB_ADD_CSRC,$1,$2)) )
$(if $(filter .s,$(suffix $2)), $(eval $(call DB_ADD_SSRC,$1,$2)) )
endef
# makefile (from 'build/database.mk', line 132)
DB_LOAD_LIBS = $(foreach library,$(wildcard $(DIR_LIB_BUILD)/*), $(eval $(call DB_LOAD_LIBRARY,$(notdir $(library)),$(library))) )
# makefile (from 'build/database.mk', line 20)
DB_GET_LIBS = $(DB_LIBS_$1)
# makefile (from 'build/buildsys.mk', line 9)
DB_DIR_test3 := /media/sf_GitHub-z80/code/prog/test3
# makefile (from 'build/buildsys.mk', line 9)
DB_TGT_test1 := /media/sf_GitHub-z80/code/lib/test1.lib
# makefile (from 'build/buildsys.mk', line 9)
DB_CSRC_test2 = /media/sf_GitHub-z80/code/lib/src/test2/test21.c /media/sf_GitHub-z80/code/lib/src/test2/test22.c
# makefile (from 'build/rules.mk', line 1)
VERB := @
# makefile (from 'build/database.mk', line 139)
DB_LOAD_PROGS = $(foreach program,$(wildcard $(DIR_PROG_BUILD)/*), $(eval $(call DB_LOAD_PROGRAM,$(notdir $(program)),$(program))) )
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'build/database.mk', line 29)
DB_GET_PROGS = $(DB_PROGS_$1)
# environment
XDG_GREETER_DATA_DIR = /var/lib/lightdm-data/tom
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# environment
XDG_SESSION_DESKTOP = cinnamon
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# automatic
%F = $(notdir $%)
# makefile (from 'build/dirs.mk', line 30)
DIRTREE_ASM := out/asm
# environment
DISPLAY = :0
# makefile (from 'build/database.mk', line 74)
DB_GET_SSRCS = $(DB_SSRC_$1)
# makefile (from 'build/tools.mk', line 15)
SDCC_LNK := sdldz80
# environment
PWD = /media/sf_GitHub-z80/code
# environment
QT_QPA_PLATFORMTHEME = qt5ct
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 1143
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from 'build/buildsys.mk', line 9)
DB_CSRC_test1 = /media/sf_GitHub-z80/code/lib/src/test1/test11.c /media/sf_GitHub-z80/code/lib/src/test1/test12.c
# makefile (from 'build/database.mk', line 93)
DB_GET_SEG = $(or $(or $(DB_SEG_$1), $(DB_SEG_$(call DB_GET_MOD,$1)) ), UNDEF )
# environment
HOME = /home/tom
# makefile (from 'build/database.mk', line 113)
define DB_LOAD_LIBRARY
$(eval $(call DB_SET_DIR,$1,$2))
$(eval $(call DB_ADD_LIB,$1))
$(eval $(call DB_ADD_SRCDIR,$1,$2))
$(foreach mkfile,$(wildcard $2/*.mk), $(eval include $(mkfile)) )
endef
# makefile (from '/media/sf_GitHub-z80/code/lib/src/test1/test1.mk', line 3)
DB_SEG_/media/sf_GitHub-z80/code/lib/src/test1/test11.c := BOOT
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'build/dirs.mk', line 28)
DIRTREE_OUT := out
# environment
LOGNAME = tom
# environment
CINNAMON_SLOWDOWN_FACTOR = 0.0001
# makefile (from 'build/database.mk', line 8)
DB_SET_DIR = DB_DIR_$1 := $2
# makefile (from 'build/version.mk', line 4)
VER_MIN := 2
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'build/tools.mk', line 16)
SDCC_LNK_FLGS := -mjwxeun
# environment
XDG_VTNR = 7
# environment
MAKELEVEL := 0
# makefile (from 'build/buildsys.mk', line 9)
DB_TGT_test2 := /media/sf_GitHub-z80/code/lib/test2.lib
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := test
# makefile (from 'build/tools.mk', line 4)
SDCC_PREFIX := 
# makefile (from 'build/dirs.mk', line 34)
DIRTREE_LIBINC := inc
# environment
SHLVL = 1
# makefile (from 'build/version.mk', line 2)
VER_NAME := Z80 Build System (SDCC)
# makefile (from 'build/buildsys.mk', line 9)
DB_SSRC_test1 = /media/sf_GitHub-z80/code/lib/src/test1/test14.s /media/sf_GitHub-z80/code/lib/src/test1/test13.s
# makefile (from 'build/buildsys.mk', line 9)
DB_DIR_test4 := /media/sf_GitHub-z80/code/prog/test4
# makefile (from 'build/tools.mk', line 7)
SDCC_PP_FLGS := -nostdinc -std=c99
# makefile (from 'build/tools.mk', line 6)
SDCC_PP := sdcpp
# environment
XDG_SESSION_ID = c2
# environment
USER = tom
# makefile (from 'build/buildsys.mk', line 12)
.DEFAULT_GOAL := clean
# environment
XDG_CURRENT_DESKTOP = X-Cinnamon
# makefile (from 'build/dirs.mk', line 20)
DIR_PROG := /media/sf_GitHub-z80/code/prog
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'build/database.mk', line 39)
define DB_ADD_SRCDIR
DB_SRCDIRS_$1 += $2
$(foreach source,$(wildcard $2/*.c) $(wildcard $2/*.s), $(call DB_ADD_SRC,$1,$(source)) )
endef
# makefile (from 'build/database.mk', line 103)
DB_SEGMENT = $(if $(filter .c,$(suffix $1)), $(eval $(call DB_SET_SEG,$(dir $(abspath $(lastword $(MAKEFILE_LIST))))$1,$2)), $(eval $(call DB_SET_SEG,$(dir $(abspath $(lastword $(MAKEFILE_LIST)))),$1)) )
# default
MAKE_COMMAND := make
# environment
OLDPWD = /home/tom
# makefile (from 'build/tools.mk', line 9)
SDCC_CC := sdcc
# makefile (from 'build/dirs.mk', line 32)
DIRTREE_LNK := out/lnk
# default
.VARIABLES := 
# makefile (from 'build/tools.mk', line 10)
SDCC_CC_FLGS := --std-sdcc99 -mz80 --no-std-crt0 --vc -S
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = en_GB:en
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# makefile (from 'build/tools.mk', line 21)
SDCC_LIB := sdcclib
# makefile (from 'build/tools.mk', line 22)
SDCC_LIB_FLGS := 
# makefile
MAKEFLAGS = prR
# environment
MFLAGS = -prR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'build/dirs.mk', line 25)
DIR_LIB_INC := /media/sf_GitHub-z80/code/lib/inc
# makefile (from 'build/database.mk', line 3)
SAFE_PATH = $(subst /,^,$1)
# makefile (from 'build/database.mk', line 58)
DB_GET_SRCS = $(call DB_GET_CSRCS,$1) $(call DB_GET_SSRCS,$1)
# makefile (from 'build/dirs.mk', line 21)
DIR_PROG_BUILD := /media/sf_GitHub-z80/code/prog
# automatic
+F = $(notdir $+)
# makefile (from 'build/dirs.mk', line 24)
DIR_LIB_BUILD := /media/sf_GitHub-z80/code/lib/src
# makefile (from 'build/database.mk', line 25)
define DB_ADD_PROG
DB_PROGS += $1
DB_TGT_$1 := $(call DB_GET_DIR,$1)/$(DIRTREE_BIN)/$1.bin
endef
# environment
CINNAMON_VERSION = 4.2.3
# environment
QT_ACCESSIBILITY = 1
# environment
DEFAULTS_PATH = /usr/share/gconf/cinnamon.default.path
# makefile (from 'build/tools.mk', line 19)
SDCC_BIN_FLGS := -Iihex -Obinary
# makefile (from 'build/tools.mk', line 18)
SDCC_BIN := sdobjcopy
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from 'build/database.mk', line 79)
DB_GET_MOD = $(strip $(foreach module,$(call DB_GET_MODS), $(if $(filter $1,$(call DB_GET_SRCS,$(module))), $(module) ) ) )
# makefile (from 'build/database.mk', line 63)
DB_ADD_CSRC = DB_CSRC_$1 += $2
# makefile (from 'build/dirs.mk', line 15)
GET_CWD = $(shell pwd)
# makefile (from 'build/dirs.mk', line 29)
DIRTREE_PP := out/pp
# makefile (from 'build/database.mk', line 16)
define DB_ADD_LIB
DB_LIBS += $1
DB_TGT_$1 := $(DIR_LIB_BIN)/$1.lib
endef
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
GNOME_TERMINAL_SCREEN = /org/gnome/Terminal/screen/e09326a5_bb2f_4a06_8a64_843195bccd33
# automatic
^F = $(notdir $^)
# environment
GNOME_TERMINAL_SERVICE = :1.85
# default
SUFFIXES := 
# makefile (from 'build/buildsys.mk', line 9)
DB_SRCDIRS_test1 = /media/sf_GitHub-z80/code/lib/src/test1
# makefile (from 'build/buildsys.mk', line 9)
DB_TGT_test4 := /media/sf_GitHub-z80/code/prog/test4/out/test4.bin
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from '/media/sf_GitHub-z80/code/lib/src/test2/test2.mk', line 3)
DB_SEG_/media/sf_GitHub-z80/code/lib/src/test2/test21.c := HELLO2
# default
.RECIPEPREFIX := 
# default
MAKE_TERMERR := /dev/pts/0
# makefile (from 'build/database.mk', line 71)
DB_ADD_SSRC = DB_SSRC_$1 += $2
# environment
LANG = en_GB.UTF-8
# environment
TERM = xterm-256color
# makefile (from 'build/dirs.mk', line 8)
GET_ROOT = $(_R_DIR_)
# makefile (from 'build/dirs.mk', line 31)
DIRTREE_OBJ := out/obj
# variable set hash-table stats:
# Load=167/1024=16%, Rehash=0, Collisions=90/480=19%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# /media/sf_GitHub-z80/code/prog/test3 (device 46, inode 19): 8 files, no impossibilities.
# . (device 46, inode 2): 7 files, no impossibilities.
# /media/sf_GitHub-z80/code/lib/src/test2 (device 46, inode 16): 10 files, no impossibilities.
# /media/sf_GitHub-z80/code/lib/src/test1 (device 46, inode 15): 11 files, no impossibilities.
# /media/sf_GitHub-z80/code/prog/test4 (device 46, inode 18): 7 files, no impossibilities.
# /media/sf_GitHub-z80/code/prog (device 46, inode 7): 4 files, no impossibilities.
# /media/sf_GitHub-z80/code/lib/src (device 46, inode 14): 4 files, no impossibilities.

# 51 files, no impossibilities in 7 directories.

# Implicit Rules

%.c:
#  recipe to execute (from 'build/rules.mk', line 4):
	@echo Preprocessing $^...
	@mkdir -p $(dir $@)
	$(VERB)$(SDCC_PP) $(SDCC_PP_FLGS) -o $@ $<

%.s:
#  recipe to execute (from 'build/rules.mk', line 9):
	@echo Compiling $^...
	@mkdir -p $(dir $@)
	$(VERB)$(SDCC_CC) $(SDCC_CC_FLGS) --codeseg $(call DB_GET_SEG,$<) -o $@ $<

%.rel:
#  recipe to execute (from 'build/rules.mk', line 14):
	@echo Assembling $^...
	@mkdir -p $(dir $@)
	$(VERB)$(SDCC_ASM) $(SDCC_ASM_FLGS) $@ $<

%.lib:
#  recipe to execute (from 'build/rules.mk', line 19):
	@echo Generating $@...
	@mkdir -p $(dir $@)
	$(VERB)$(SDCC_LIB) $(SDCC_LIB_FLGS) $@ $^
	

%.h:
#  recipe to execute (from 'build/rules.mk', line 24):
	@echo Copying Header File $^... 
	@mkdir -p $(dir $@)
	$(VERB)cp -f $^ $@

%.ihx:
#  recipe to execute (from 'build/rules.mk', line 29):
	@echo Linking $@...
	@mkdir -p $(dir $@)
	$(VERB)$(SDCC_LNK) $(SDCC_LNK_FLGS) -i $@ $^

%.bin:
#  recipe to execute (from 'build/rules.mk', line 34):
	@echo Converting $@...
	@mkdir -p $(dir $@)
	$(VERB)$(SDCC_BIN) $(SDCC_BIN_FLGS) $< $@

%-clean:
#  recipe to execute (from 'build/rules.mk', line 39):
	@echo Cleaning Module $(@:%-clean=%)...
	$(VERB)rm -rf $(call DB_GET_CLEANTGTS,$(@:%-clean=%))

# 8 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
build/buildsys.mk:
# Implicit rule search has been done.
# Last modified 2019-10-28 16:20:19.9543729
# File has been updated.
# Successfully updated.

# Not a target:
.SUFFIXES:
# Implicit rule search has not been done.
# Modification time never checked.
# File has not been updated.

# Not a target:
build/rules.mk:
# Implicit rule search has been done.
# Last modified 2019-10-28 12:00:25.0559765
# File has been updated.
# Successfully updated.

# Not a target:
/media/sf_GitHub-z80/code/lib/src/test2/test2.mk:
# Implicit rule search has been done.
# Last modified 2019-10-28 16:38:29.7116662
# File has been updated.
# Successfully updated.

test:
#  Command line target.
# Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
# File does not exist.
# File has been updated.
# Successfully updated.
# automatic
# @ := test
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=55/140=39%
#  recipe to execute (from 'makefile', line 9):
	@echo Testing...
	@echo C Sources   = $(call DB_GET_CSRCS,test1)
	@echo S Sources   = $(call DB_GET_SSRCS,test1)
	@echo All Sources = $(call DB_GET_SRCS,test1)
	@echo Module      = $(call DB_GET_MOD,/media/sf_GitHub-z80/code/lib/src/test1/test11.c)
	@echo Module      = $(call DB_GET_MOD,/media/sf_GitHub-z80/code/lib/src/test2/test21.c)
	@echo Segment     = $(call DB_GET_SEG,test1)
	@echo Segment     = $(call DB_GET_SEG,/media/sf_GitHub-z80/code/lib/src/test1/test11.c)
	@echo Segment     = $(call DB_GET_SEG,/media/sf_GitHub-z80/code/lib/src/test1/test12.c)
	@echo Segment     = $(call DB_GET_SEG,/media/sf_GitHub-z80/code/lib/src/test2/test21.c)

# Not a target:
makefile:
# Implicit rule search has been done.
# Last modified 2019-10-28 16:03:25.0198119
# File has been updated.
# Successfully updated.

# Not a target:
build/dirs.mk:
# Implicit rule search has been done.
# Last modified 2019-10-24 11:48:42.9280955
# File has been updated.
# Successfully updated.

info-tools:
# Implicit rule search has not been done.
# Modification time never checked.
# File has not been updated.
#  recipe to execute (from 'makefile', line 50):
	@echo --------------------------------------
	@echo $(VER_NAME) V$(VER_MAJ).$(VER_MIN) Tools:
	@echo --------------------------------------
	@echo Pre-Processor ========================
	@echo Program = $(SDCC_PP)
	@echo Options = $(SDCC_PP_FLGS)
	@echo ======================================
	@echo Compiler =============================
	@echo Program = $(SDCC_CC)
	@echo Options = $(SDCC_CC_FLGS)
	@echo ======================================
	@echo Assembler ============================
	@echo Program = $(SDCC_ASM)
	@echo Options = $(SDCC_ASM_FLGS)
	@echo ======================================
	@echo Linker ===============================
	@echo Program = $(SDCC_LNK)
	@echo Options = $(SDCC_LNK_FLGS)
	@echo ======================================
	@echo Binary Converter =====================
	@echo Program = $(SDCC_BIN)
	@echo Options = $(SDCC_BIN_FLGS)
	@echo ======================================
	

# Not a target:
.DEFAULT:
# Implicit rule search has not been done.
# Modification time never checked.
# File has not been updated.

# Not a target:
build/version.mk:
# Implicit rule search has been done.
# Last modified 2019-10-24 11:35:53.8739286
# File has been updated.
# Successfully updated.

# Not a target:
/media/sf_GitHub-z80/code/lib/src/test1/test1.mk:
# Implicit rule search has been done.
# Last modified 2019-10-28 16:29:22.4565472
# File has been updated.
# Successfully updated.

# Not a target:
build/tools.mk:
# Implicit rule search has been done.
# Last modified 2019-10-24 11:31:44.1534174
# File has been updated.
# Successfully updated.

# Not a target:
build/database.mk:
# Implicit rule search has been done.
# Last modified 2019-10-28 16:43:10.6088367
# File has been updated.
# Successfully updated.

info: info-dirs info-tools
# Implicit rule search has not been done.
# Modification time never checked.
# File has not been updated.

info-dirs:
# Implicit rule search has not been done.
# Modification time never checked.
# File has not been updated.
#  recipe to execute (from 'makefile', line 21):
	@echo --------------------------------------
	@echo $(VER_NAME) V$(VER_MAJ).$(VER_MIN) Directories:
	@echo --------------------------------------
	@echo Root Dir = $(call GET_ROOT)
	@echo Libraries ============================
	@echo Root     = $(DIR_LIB)
	@echo Modules  = $(DIR_LIB_BUILD)
	@echo Binaries: 
	@echo    Source = [module]/$(DIRTREE_LNK)
	@echo    Dest   = $(DIR_LIB_BIN)
	@echo Headers: 
	@echo    Source = [module]/$(DIRTREE_LIBINC)
	@echo    Dest   = $(DIR_LIB_INC)
	@echo ======================================
	@echo Programs =============================
	@echo Root     = $(DIR_PROG)
	@echo Modules  = $(DIR_PROG_BUILD)
	@echo Binaries = [module]/$(DIRTREE_BIN)
	@echo ======================================
	@echo General ==============================
	@echo Out      = [module]/$(DIRTREE_OUT)
	@echo Preproc  = [module]/$(DIRTREE_PP)
	@echo Assembly = [module]/$(DIRTREE_ASM)
	@echo Objects  = [module]/$(DIRTREE_OBJ)
	@echo Linker   = [module]/$(DIRTREE_LNK)
	@echo ======================================
	@echo --------------------------------------
	

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/39=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 65 / storage = 807 B / avg = 12 B
# current buf: size = 8162 B / used = 807 B / count = 65 / avg = 12 B

# strcache performance: lookups = 101 / hit rate = 35%
# hash-table stats:
# Load=65/8192=1%, Rehash=0, Collisions=8/101=8%
# Finished Make data base on Mon Oct 28 16:46:39 2019

